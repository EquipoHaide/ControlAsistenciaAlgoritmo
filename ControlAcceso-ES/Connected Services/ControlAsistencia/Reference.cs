//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlAccesoES.ControlAsistencia {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ControlAsistenciaServiciosWeb")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjUsuario", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idRolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_empleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_usuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlAccesoES.ControlAsistencia.ObjPermiso[] permisosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activo {
            get {
                return this.activoField;
            }
            set {
                if ((object.ReferenceEquals(this.activoField, value) != true)) {
                    this.activoField = value;
                    this.RaisePropertyChanged("activo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idRol {
            get {
                return this.idRolField;
            }
            set {
                if ((this.idRolField.Equals(value) != true)) {
                    this.idRolField = value;
                    this.RaisePropertyChanged("idRol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_empleado {
            get {
                return this.id_empleadoField;
            }
            set {
                if ((this.id_empleadoField.Equals(value) != true)) {
                    this.id_empleadoField = value;
                    this.RaisePropertyChanged("id_empleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_usuario {
            get {
                return this.id_usuarioField;
            }
            set {
                if ((this.id_usuarioField.Equals(value) != true)) {
                    this.id_usuarioField = value;
                    this.RaisePropertyChanged("id_usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partida {
            get {
                return this.partidaField;
            }
            set {
                if ((object.ReferenceEquals(this.partidaField, value) != true)) {
                    this.partidaField = value;
                    this.RaisePropertyChanged("partida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pass {
            get {
                return this.passField;
            }
            set {
                if ((object.ReferenceEquals(this.passField, value) != true)) {
                    this.passField = value;
                    this.RaisePropertyChanged("pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlAccesoES.ControlAsistencia.ObjPermiso[] permisos {
            get {
                return this.permisosField;
            }
            set {
                if ((object.ReferenceEquals(this.permisosField, value) != true)) {
                    this.permisosField = value;
                    this.RaisePropertyChanged("permisos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjPermiso", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjPermiso : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermisoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPermisoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Permiso {
            get {
                return this.PermisoField;
            }
            set {
                if ((object.ReferenceEquals(this.PermisoField, value) != true)) {
                    this.PermisoField = value;
                    this.RaisePropertyChanged("Permiso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPermiso {
            get {
                return this.idPermisoField;
            }
            set {
                if ((this.idPermisoField.Equals(value) != true)) {
                    this.idPermisoField = value;
                    this.RaisePropertyChanged("idPermiso");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjEmpleado", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjEmpleado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CURPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstatusFotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstatusTemplate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstatusTemplate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HoraEntradaPromedioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HoraSalidaPromedioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PuestoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlFotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string actividadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apellidoMaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apellidoPaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string checaAsistenciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string claveRamoUnidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cvePuestoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string delegacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string edoCivilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaIngresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaLicenciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaPuestoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] fotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string funcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nempleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nivelSueldoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreRamoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUnidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] templeteHuellaPrimeraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] templeteHuellaSegundaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CURP {
            get {
                return this.CURPField;
            }
            set {
                if ((object.ReferenceEquals(this.CURPField, value) != true)) {
                    this.CURPField = value;
                    this.RaisePropertyChanged("CURP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstatusFoto {
            get {
                return this.EstatusFotoField;
            }
            set {
                if ((this.EstatusFotoField.Equals(value) != true)) {
                    this.EstatusFotoField = value;
                    this.RaisePropertyChanged("EstatusFoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstatusTemplate1 {
            get {
                return this.EstatusTemplate1Field;
            }
            set {
                if ((this.EstatusTemplate1Field.Equals(value) != true)) {
                    this.EstatusTemplate1Field = value;
                    this.RaisePropertyChanged("EstatusTemplate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstatusTemplate2 {
            get {
                return this.EstatusTemplate2Field;
            }
            set {
                if ((this.EstatusTemplate2Field.Equals(value) != true)) {
                    this.EstatusTemplate2Field = value;
                    this.RaisePropertyChanged("EstatusTemplate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HoraEntradaPromedio {
            get {
                return this.HoraEntradaPromedioField;
            }
            set {
                if ((this.HoraEntradaPromedioField.Equals(value) != true)) {
                    this.HoraEntradaPromedioField = value;
                    this.RaisePropertyChanged("HoraEntradaPromedio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HoraSalidaPromedio {
            get {
                return this.HoraSalidaPromedioField;
            }
            set {
                if ((this.HoraSalidaPromedioField.Equals(value) != true)) {
                    this.HoraSalidaPromedioField = value;
                    this.RaisePropertyChanged("HoraSalidaPromedio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Puesto {
            get {
                return this.PuestoField;
            }
            set {
                if ((object.ReferenceEquals(this.PuestoField, value) != true)) {
                    this.PuestoField = value;
                    this.RaisePropertyChanged("Puesto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFC {
            get {
                return this.RFCField;
            }
            set {
                if ((object.ReferenceEquals(this.RFCField, value) != true)) {
                    this.RFCField = value;
                    this.RaisePropertyChanged("RFC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipoEmpleado {
            get {
                return this.TipoEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoEmpleadoField, value) != true)) {
                    this.TipoEmpleadoField = value;
                    this.RaisePropertyChanged("TipoEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlFoto {
            get {
                return this.UrlFotoField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlFotoField, value) != true)) {
                    this.UrlFotoField = value;
                    this.RaisePropertyChanged("UrlFoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string actividad {
            get {
                return this.actividadField;
            }
            set {
                if ((object.ReferenceEquals(this.actividadField, value) != true)) {
                    this.actividadField = value;
                    this.RaisePropertyChanged("actividad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apellidoMaterno {
            get {
                return this.apellidoMaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.apellidoMaternoField, value) != true)) {
                    this.apellidoMaternoField = value;
                    this.RaisePropertyChanged("apellidoMaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apellidoPaterno {
            get {
                return this.apellidoPaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.apellidoPaternoField, value) != true)) {
                    this.apellidoPaternoField = value;
                    this.RaisePropertyChanged("apellidoPaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string checaAsistencia {
            get {
                return this.checaAsistenciaField;
            }
            set {
                if ((object.ReferenceEquals(this.checaAsistenciaField, value) != true)) {
                    this.checaAsistenciaField = value;
                    this.RaisePropertyChanged("checaAsistencia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string claveRamoUnidad {
            get {
                return this.claveRamoUnidadField;
            }
            set {
                if ((object.ReferenceEquals(this.claveRamoUnidadField, value) != true)) {
                    this.claveRamoUnidadField = value;
                    this.RaisePropertyChanged("claveRamoUnidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cvePuesto {
            get {
                return this.cvePuestoField;
            }
            set {
                if ((object.ReferenceEquals(this.cvePuestoField, value) != true)) {
                    this.cvePuestoField = value;
                    this.RaisePropertyChanged("cvePuesto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string delegacion {
            get {
                return this.delegacionField;
            }
            set {
                if ((object.ReferenceEquals(this.delegacionField, value) != true)) {
                    this.delegacionField = value;
                    this.RaisePropertyChanged("delegacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string edoCivil {
            get {
                return this.edoCivilField;
            }
            set {
                if ((object.ReferenceEquals(this.edoCivilField, value) != true)) {
                    this.edoCivilField = value;
                    this.RaisePropertyChanged("edoCivil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estatus {
            get {
                return this.estatusField;
            }
            set {
                if ((object.ReferenceEquals(this.estatusField, value) != true)) {
                    this.estatusField = value;
                    this.RaisePropertyChanged("estatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaFin {
            get {
                return this.fechaFinField;
            }
            set {
                if ((this.fechaFinField.Equals(value) != true)) {
                    this.fechaFinField = value;
                    this.RaisePropertyChanged("fechaFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaIngreso {
            get {
                return this.fechaIngresoField;
            }
            set {
                if ((this.fechaIngresoField.Equals(value) != true)) {
                    this.fechaIngresoField = value;
                    this.RaisePropertyChanged("fechaIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaLicencia {
            get {
                return this.fechaLicenciaField;
            }
            set {
                if ((this.fechaLicenciaField.Equals(value) != true)) {
                    this.fechaLicenciaField = value;
                    this.RaisePropertyChanged("fechaLicencia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaPuesto {
            get {
                return this.fechaPuestoField;
            }
            set {
                if ((this.fechaPuestoField.Equals(value) != true)) {
                    this.fechaPuestoField = value;
                    this.RaisePropertyChanged("fechaPuesto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] foto {
            get {
                return this.fotoField;
            }
            set {
                if ((object.ReferenceEquals(this.fotoField, value) != true)) {
                    this.fotoField = value;
                    this.RaisePropertyChanged("foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string funcion {
            get {
                return this.funcionField;
            }
            set {
                if ((object.ReferenceEquals(this.funcionField, value) != true)) {
                    this.funcionField = value;
                    this.RaisePropertyChanged("funcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEmpleado {
            get {
                return this.idEmpleadoField;
            }
            set {
                if ((this.idEmpleadoField.Equals(value) != true)) {
                    this.idEmpleadoField = value;
                    this.RaisePropertyChanged("idEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nempleado {
            get {
                return this.nempleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.nempleadoField, value) != true)) {
                    this.nempleadoField = value;
                    this.RaisePropertyChanged("nempleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nivelSueldo {
            get {
                return this.nivelSueldoField;
            }
            set {
                if ((object.ReferenceEquals(this.nivelSueldoField, value) != true)) {
                    this.nivelSueldoField = value;
                    this.RaisePropertyChanged("nivelSueldo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreRamo {
            get {
                return this.nombreRamoField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreRamoField, value) != true)) {
                    this.nombreRamoField = value;
                    this.RaisePropertyChanged("nombreRamo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUnidad {
            get {
                return this.nombreUnidadField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUnidadField, value) != true)) {
                    this.nombreUnidadField = value;
                    this.RaisePropertyChanged("nombreUnidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sexo {
            get {
                return this.sexoField;
            }
            set {
                if ((object.ReferenceEquals(this.sexoField, value) != true)) {
                    this.sexoField = value;
                    this.RaisePropertyChanged("sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] templeteHuellaPrimera {
            get {
                return this.templeteHuellaPrimeraField;
            }
            set {
                if ((object.ReferenceEquals(this.templeteHuellaPrimeraField, value) != true)) {
                    this.templeteHuellaPrimeraField = value;
                    this.RaisePropertyChanged("templeteHuellaPrimera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] templeteHuellaSegunda {
            get {
                return this.templeteHuellaSegundaField;
            }
            set {
                if ((object.ReferenceEquals(this.templeteHuellaSegundaField, value) != true)) {
                    this.templeteHuellaSegundaField = value;
                    this.RaisePropertyChanged("templeteHuellaSegunda");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjHorario", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjHorario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreTurnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime domingoEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime domingoSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estimuloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idTurnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime juevesEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime juevesSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lunesEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lunesSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime martesEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime martesSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime miercolesEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime miercolesSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime periodoFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime periodoInicialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sabadoEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sabadoSalidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoTurnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int turnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime viernesEntradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime viernesSalidaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreTurno {
            get {
                return this.NombreTurnoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreTurnoField, value) != true)) {
                    this.NombreTurnoField = value;
                    this.RaisePropertyChanged("NombreTurno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime domingoEntrada {
            get {
                return this.domingoEntradaField;
            }
            set {
                if ((this.domingoEntradaField.Equals(value) != true)) {
                    this.domingoEntradaField = value;
                    this.RaisePropertyChanged("domingoEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime domingoSalida {
            get {
                return this.domingoSalidaField;
            }
            set {
                if ((this.domingoSalidaField.Equals(value) != true)) {
                    this.domingoSalidaField = value;
                    this.RaisePropertyChanged("domingoSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estimulo {
            get {
                return this.estimuloField;
            }
            set {
                if ((object.ReferenceEquals(this.estimuloField, value) != true)) {
                    this.estimuloField = value;
                    this.RaisePropertyChanged("estimulo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEmpleado {
            get {
                return this.idEmpleadoField;
            }
            set {
                if ((this.idEmpleadoField.Equals(value) != true)) {
                    this.idEmpleadoField = value;
                    this.RaisePropertyChanged("idEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idTurno {
            get {
                return this.idTurnoField;
            }
            set {
                if ((this.idTurnoField.Equals(value) != true)) {
                    this.idTurnoField = value;
                    this.RaisePropertyChanged("idTurno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime juevesEntrada {
            get {
                return this.juevesEntradaField;
            }
            set {
                if ((this.juevesEntradaField.Equals(value) != true)) {
                    this.juevesEntradaField = value;
                    this.RaisePropertyChanged("juevesEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime juevesSalida {
            get {
                return this.juevesSalidaField;
            }
            set {
                if ((this.juevesSalidaField.Equals(value) != true)) {
                    this.juevesSalidaField = value;
                    this.RaisePropertyChanged("juevesSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lunesEntrada {
            get {
                return this.lunesEntradaField;
            }
            set {
                if ((this.lunesEntradaField.Equals(value) != true)) {
                    this.lunesEntradaField = value;
                    this.RaisePropertyChanged("lunesEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lunesSalida {
            get {
                return this.lunesSalidaField;
            }
            set {
                if ((this.lunesSalidaField.Equals(value) != true)) {
                    this.lunesSalidaField = value;
                    this.RaisePropertyChanged("lunesSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime martesEntrada {
            get {
                return this.martesEntradaField;
            }
            set {
                if ((this.martesEntradaField.Equals(value) != true)) {
                    this.martesEntradaField = value;
                    this.RaisePropertyChanged("martesEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime martesSalida {
            get {
                return this.martesSalidaField;
            }
            set {
                if ((this.martesSalidaField.Equals(value) != true)) {
                    this.martesSalidaField = value;
                    this.RaisePropertyChanged("martesSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime miercolesEntrada {
            get {
                return this.miercolesEntradaField;
            }
            set {
                if ((this.miercolesEntradaField.Equals(value) != true)) {
                    this.miercolesEntradaField = value;
                    this.RaisePropertyChanged("miercolesEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime miercolesSalida {
            get {
                return this.miercolesSalidaField;
            }
            set {
                if ((this.miercolesSalidaField.Equals(value) != true)) {
                    this.miercolesSalidaField = value;
                    this.RaisePropertyChanged("miercolesSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime periodoFinal {
            get {
                return this.periodoFinalField;
            }
            set {
                if ((this.periodoFinalField.Equals(value) != true)) {
                    this.periodoFinalField = value;
                    this.RaisePropertyChanged("periodoFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime periodoInicial {
            get {
                return this.periodoInicialField;
            }
            set {
                if ((this.periodoInicialField.Equals(value) != true)) {
                    this.periodoInicialField = value;
                    this.RaisePropertyChanged("periodoInicial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sabadoEntrada {
            get {
                return this.sabadoEntradaField;
            }
            set {
                if ((this.sabadoEntradaField.Equals(value) != true)) {
                    this.sabadoEntradaField = value;
                    this.RaisePropertyChanged("sabadoEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sabadoSalida {
            get {
                return this.sabadoSalidaField;
            }
            set {
                if ((this.sabadoSalidaField.Equals(value) != true)) {
                    this.sabadoSalidaField = value;
                    this.RaisePropertyChanged("sabadoSalida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipoTurno {
            get {
                return this.tipoTurnoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoTurnoField, value) != true)) {
                    this.tipoTurnoField = value;
                    this.RaisePropertyChanged("tipoTurno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int turno {
            get {
                return this.turnoField;
            }
            set {
                if ((this.turnoField.Equals(value) != true)) {
                    this.turnoField = value;
                    this.RaisePropertyChanged("turno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime viernesEntrada {
            get {
                return this.viernesEntradaField;
            }
            set {
                if ((this.viernesEntradaField.Equals(value) != true)) {
                    this.viernesEntradaField = value;
                    this.RaisePropertyChanged("viernesEntrada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime viernesSalida {
            get {
                return this.viernesSalidaField;
            }
            set {
                if ((this.viernesSalidaField.Equals(value) != true)) {
                    this.viernesSalidaField = value;
                    this.RaisePropertyChanged("viernesSalida");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjChecador", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjChecador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlmacenaRegLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmpleadosCargadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaAltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoraReplicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LapsoChecadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlAccesoES.ControlAsistencia.ObjEmpleado[] ListaEmpleadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListaNumerosEmpleadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinutoReplicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreEstacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegundoReplicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TieneEmpleadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idChecadorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activo {
            get {
                return this.ActivoField;
            }
            set {
                if ((this.ActivoField.Equals(value) != true)) {
                    this.ActivoField = value;
                    this.RaisePropertyChanged("Activo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlmacenaRegLocal {
            get {
                return this.AlmacenaRegLocalField;
            }
            set {
                if ((this.AlmacenaRegLocalField.Equals(value) != true)) {
                    this.AlmacenaRegLocalField = value;
                    this.RaisePropertyChanged("AlmacenaRegLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmpleadosCargados {
            get {
                return this.EmpleadosCargadosField;
            }
            set {
                if ((this.EmpleadosCargadosField.Equals(value) != true)) {
                    this.EmpleadosCargadosField = value;
                    this.RaisePropertyChanged("EmpleadosCargados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaAlta {
            get {
                return this.FechaAltaField;
            }
            set {
                if ((this.FechaAltaField.Equals(value) != true)) {
                    this.FechaAltaField = value;
                    this.RaisePropertyChanged("FechaAlta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoraReplica {
            get {
                return this.HoraReplicaField;
            }
            set {
                if ((this.HoraReplicaField.Equals(value) != true)) {
                    this.HoraReplicaField = value;
                    this.RaisePropertyChanged("HoraReplica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LapsoChecado {
            get {
                return this.LapsoChecadoField;
            }
            set {
                if ((this.LapsoChecadoField.Equals(value) != true)) {
                    this.LapsoChecadoField = value;
                    this.RaisePropertyChanged("LapsoChecado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlAccesoES.ControlAsistencia.ObjEmpleado[] ListaEmpleados {
            get {
                return this.ListaEmpleadosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaEmpleadosField, value) != true)) {
                    this.ListaEmpleadosField = value;
                    this.RaisePropertyChanged("ListaEmpleados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListaNumerosEmpleados {
            get {
                return this.ListaNumerosEmpleadosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaNumerosEmpleadosField, value) != true)) {
                    this.ListaNumerosEmpleadosField = value;
                    this.RaisePropertyChanged("ListaNumerosEmpleados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinutoReplica {
            get {
                return this.MinutoReplicaField;
            }
            set {
                if ((this.MinutoReplicaField.Equals(value) != true)) {
                    this.MinutoReplicaField = value;
                    this.RaisePropertyChanged("MinutoReplica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreEstacion {
            get {
                return this.NombreEstacionField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreEstacionField, value) != true)) {
                    this.NombreEstacionField = value;
                    this.RaisePropertyChanged("NombreEstacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegundoReplica {
            get {
                return this.SegundoReplicaField;
            }
            set {
                if ((this.SegundoReplicaField.Equals(value) != true)) {
                    this.SegundoReplicaField = value;
                    this.RaisePropertyChanged("SegundoReplica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TieneEmpleados {
            get {
                return this.TieneEmpleadosField;
            }
            set {
                if ((this.TieneEmpleadosField.Equals(value) != true)) {
                    this.TieneEmpleadosField = value;
                    this.RaisePropertyChanged("TieneEmpleados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idChecador {
            get {
                return this.idChecadorField;
            }
            set {
                if ((this.idChecadorField.Equals(value) != true)) {
                    this.idChecadorField = value;
                    this.RaisePropertyChanged("idChecador");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjControlAcceso", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjControlAcceso : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cambiadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idControlAccesoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string justificadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime tiempoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int turnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ES {
            get {
                return this.ESField;
            }
            set {
                if ((object.ReferenceEquals(this.ESField, value) != true)) {
                    this.ESField = value;
                    this.RaisePropertyChanged("ES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cambiado {
            get {
                return this.cambiadoField;
            }
            set {
                if ((object.ReferenceEquals(this.cambiadoField, value) != true)) {
                    this.cambiadoField = value;
                    this.RaisePropertyChanged("cambiado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idControlAcceso {
            get {
                return this.idControlAccesoField;
            }
            set {
                if ((this.idControlAccesoField.Equals(value) != true)) {
                    this.idControlAccesoField = value;
                    this.RaisePropertyChanged("idControlAcceso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEmpleado {
            get {
                return this.idEmpleadoField;
            }
            set {
                if ((this.idEmpleadoField.Equals(value) != true)) {
                    this.idEmpleadoField = value;
                    this.RaisePropertyChanged("idEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string justificado {
            get {
                return this.justificadoField;
            }
            set {
                if ((object.ReferenceEquals(this.justificadoField, value) != true)) {
                    this.justificadoField = value;
                    this.RaisePropertyChanged("justificado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime tiempo {
            get {
                return this.tiempoField;
            }
            set {
                if ((this.tiempoField.Equals(value) != true)) {
                    this.tiempoField = value;
                    this.RaisePropertyChanged("tiempo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int turno {
            get {
                return this.turnoField;
            }
            set {
                if ((this.turnoField.Equals(value) != true)) {
                    this.turnoField = value;
                    this.RaisePropertyChanged("turno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjUnidad", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjUnidad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvRamoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvUnidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RamoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnidadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CvRamo {
            get {
                return this.CvRamoField;
            }
            set {
                if ((object.ReferenceEquals(this.CvRamoField, value) != true)) {
                    this.CvRamoField = value;
                    this.RaisePropertyChanged("CvRamo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CvUnidad {
            get {
                return this.CvUnidadField;
            }
            set {
                if ((object.ReferenceEquals(this.CvUnidadField, value) != true)) {
                    this.CvUnidadField = value;
                    this.RaisePropertyChanged("CvUnidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ramo {
            get {
                return this.RamoField;
            }
            set {
                if ((object.ReferenceEquals(this.RamoField, value) != true)) {
                    this.RamoField = value;
                    this.RaisePropertyChanged("Ramo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unidad {
            get {
                return this.UnidadField;
            }
            set {
                if ((object.ReferenceEquals(this.UnidadField, value) != true)) {
                    this.UnidadField = value;
                    this.RaisePropertyChanged("Unidad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjRamo", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjRamo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvRamoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RamoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CvRamo {
            get {
                return this.CvRamoField;
            }
            set {
                if ((object.ReferenceEquals(this.CvRamoField, value) != true)) {
                    this.CvRamoField = value;
                    this.RaisePropertyChanged("CvRamo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ramo {
            get {
                return this.RamoField;
            }
            set {
                if ((object.ReferenceEquals(this.RamoField, value) != true)) {
                    this.RamoField = value;
                    this.RaisePropertyChanged("Ramo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjReporteES", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjReporteES : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DESCRIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime diaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string funField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime horaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_empleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string justificadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nempleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreFirma1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreFirma2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreFirma3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string puestoFirma1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string puestoFirma2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string puestoFirma3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCRIP {
            get {
                return this.DESCRIPField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRIPField, value) != true)) {
                    this.DESCRIPField = value;
                    this.RaisePropertyChanged("DESCRIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ES {
            get {
                return this.ESField;
            }
            set {
                if ((object.ReferenceEquals(this.ESField, value) != true)) {
                    this.ESField = value;
                    this.RaisePropertyChanged("ES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dia {
            get {
                return this.diaField;
            }
            set {
                if ((this.diaField.Equals(value) != true)) {
                    this.diaField = value;
                    this.RaisePropertyChanged("dia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fun {
            get {
                return this.funField;
            }
            set {
                if ((object.ReferenceEquals(this.funField, value) != true)) {
                    this.funField = value;
                    this.RaisePropertyChanged("fun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime hora {
            get {
                return this.horaField;
            }
            set {
                if ((this.horaField.Equals(value) != true)) {
                    this.horaField = value;
                    this.RaisePropertyChanged("hora");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_empleado {
            get {
                return this.id_empleadoField;
            }
            set {
                if ((this.id_empleadoField.Equals(value) != true)) {
                    this.id_empleadoField = value;
                    this.RaisePropertyChanged("id_empleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string justificado {
            get {
                return this.justificadoField;
            }
            set {
                if ((object.ReferenceEquals(this.justificadoField, value) != true)) {
                    this.justificadoField = value;
                    this.RaisePropertyChanged("justificado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nempleado {
            get {
                return this.nempleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.nempleadoField, value) != true)) {
                    this.nempleadoField = value;
                    this.RaisePropertyChanged("nempleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreFirma1 {
            get {
                return this.nombreFirma1Field;
            }
            set {
                if ((object.ReferenceEquals(this.nombreFirma1Field, value) != true)) {
                    this.nombreFirma1Field = value;
                    this.RaisePropertyChanged("nombreFirma1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreFirma2 {
            get {
                return this.nombreFirma2Field;
            }
            set {
                if ((object.ReferenceEquals(this.nombreFirma2Field, value) != true)) {
                    this.nombreFirma2Field = value;
                    this.RaisePropertyChanged("nombreFirma2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreFirma3 {
            get {
                return this.nombreFirma3Field;
            }
            set {
                if ((object.ReferenceEquals(this.nombreFirma3Field, value) != true)) {
                    this.nombreFirma3Field = value;
                    this.RaisePropertyChanged("nombreFirma3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partida {
            get {
                return this.partidaField;
            }
            set {
                if ((object.ReferenceEquals(this.partidaField, value) != true)) {
                    this.partidaField = value;
                    this.RaisePropertyChanged("partida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string puestoFirma1 {
            get {
                return this.puestoFirma1Field;
            }
            set {
                if ((object.ReferenceEquals(this.puestoFirma1Field, value) != true)) {
                    this.puestoFirma1Field = value;
                    this.RaisePropertyChanged("puestoFirma1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string puestoFirma2 {
            get {
                return this.puestoFirma2Field;
            }
            set {
                if ((object.ReferenceEquals(this.puestoFirma2Field, value) != true)) {
                    this.puestoFirma2Field = value;
                    this.RaisePropertyChanged("puestoFirma2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string puestoFirma3 {
            get {
                return this.puestoFirma3Field;
            }
            set {
                if ((object.ReferenceEquals(this.puestoFirma3Field, value) != true)) {
                    this.puestoFirma3Field = value;
                    this.RaisePropertyChanged("puestoFirma3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjDiasInhabiles", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjDiasInhabiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CONCEPTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DIAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONCEPTO {
            get {
                return this.CONCEPTOField;
            }
            set {
                if ((object.ReferenceEquals(this.CONCEPTOField, value) != true)) {
                    this.CONCEPTOField = value;
                    this.RaisePropertyChanged("CONCEPTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DIA {
            get {
                return this.DIAField;
            }
            set {
                if ((this.DIAField.Equals(value) != true)) {
                    this.DIAField = value;
                    this.RaisePropertyChanged("DIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjChecadorReplica", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjChecadorReplica : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaHoraFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaHoraInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroRegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idChecadorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaHoraFin {
            get {
                return this.FechaHoraFinField;
            }
            set {
                if ((this.FechaHoraFinField.Equals(value) != true)) {
                    this.FechaHoraFinField = value;
                    this.RaisePropertyChanged("FechaHoraFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaHoraInicio {
            get {
                return this.FechaHoraInicioField;
            }
            set {
                if ((this.FechaHoraInicioField.Equals(value) != true)) {
                    this.FechaHoraInicioField = value;
                    this.RaisePropertyChanged("FechaHoraInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroReg {
            get {
                return this.NumeroRegField;
            }
            set {
                if ((this.NumeroRegField.Equals(value) != true)) {
                    this.NumeroRegField = value;
                    this.RaisePropertyChanged("NumeroReg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idChecador {
            get {
                return this.idChecadorField;
            }
            set {
                if ((this.idChecadorField.Equals(value) != true)) {
                    this.idChecadorField = value;
                    this.RaisePropertyChanged("idChecador");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjEvaluacionFalta", Namespace="http://schemas.datacontract.org/2004/07/Objetos")]
    [System.SerializableAttribute()]
    public partial class ObjEvaluacionFalta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estimuloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string funField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string funcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nempleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string quincenaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultadoDescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime tiempoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoFaltaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estimulo {
            get {
                return this.estimuloField;
            }
            set {
                if ((object.ReferenceEquals(this.estimuloField, value) != true)) {
                    this.estimuloField = value;
                    this.RaisePropertyChanged("estimulo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fecha {
            get {
                return this.fechaField;
            }
            set {
                if ((this.fechaField.Equals(value) != true)) {
                    this.fechaField = value;
                    this.RaisePropertyChanged("fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fun {
            get {
                return this.funField;
            }
            set {
                if ((object.ReferenceEquals(this.funField, value) != true)) {
                    this.funField = value;
                    this.RaisePropertyChanged("fun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string funcion {
            get {
                return this.funcionField;
            }
            set {
                if ((object.ReferenceEquals(this.funcionField, value) != true)) {
                    this.funcionField = value;
                    this.RaisePropertyChanged("funcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEmpleado {
            get {
                return this.idEmpleadoField;
            }
            set {
                if ((this.idEmpleadoField.Equals(value) != true)) {
                    this.idEmpleadoField = value;
                    this.RaisePropertyChanged("idEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nempleado {
            get {
                return this.nempleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.nempleadoField, value) != true)) {
                    this.nempleadoField = value;
                    this.RaisePropertyChanged("nempleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partida {
            get {
                return this.partidaField;
            }
            set {
                if ((object.ReferenceEquals(this.partidaField, value) != true)) {
                    this.partidaField = value;
                    this.RaisePropertyChanged("partida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string quincena {
            get {
                return this.quincenaField;
            }
            set {
                if ((object.ReferenceEquals(this.quincenaField, value) != true)) {
                    this.quincenaField = value;
                    this.RaisePropertyChanged("quincena");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultado {
            get {
                return this.resultadoField;
            }
            set {
                if ((object.ReferenceEquals(this.resultadoField, value) != true)) {
                    this.resultadoField = value;
                    this.RaisePropertyChanged("resultado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultadoDescripcion {
            get {
                return this.resultadoDescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.resultadoDescripcionField, value) != true)) {
                    this.resultadoDescripcionField = value;
                    this.RaisePropertyChanged("resultadoDescripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime tiempo {
            get {
                return this.tiempoField;
            }
            set {
                if ((this.tiempoField.Equals(value) != true)) {
                    this.tiempoField = value;
                    this.RaisePropertyChanged("tiempo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipoFalta {
            get {
                return this.tipoFaltaField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoFaltaField, value) != true)) {
                    this.tipoFaltaField = value;
                    this.RaisePropertyChanged("tipoFalta");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ControlAsistencia.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ControlAccesoES.ControlAsistencia.CompositeType GetDataUsingDataContract(ControlAccesoES.ControlAsistencia.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.CompositeType> GetDataUsingDataContractAsync(ControlAccesoES.ControlAsistencia.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuarioXUsername", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuarioXUsernameResponse")]
        ControlAccesoES.ControlAsistencia.ObjUsuario SeleccionarUsuarioXUsername(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuarioXUsername", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuarioXUsernameResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario> SeleccionarUsuarioXUsernameAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuarioXID", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuarioXIDResponse")]
        ControlAccesoES.ControlAsistencia.ObjUsuario SeleccionarUsuarioXID(int idusuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuarioXID", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuarioXIDResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario> SeleccionarUsuarioXIDAsync(int idusuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarPermisosUsuario", ReplyAction="http://tempuri.org/IService1/EliminarPermisosUsuarioResponse")]
        int EliminarPermisosUsuario(int idusuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarPermisosUsuario", ReplyAction="http://tempuri.org/IService1/EliminarPermisosUsuarioResponse")]
        System.Threading.Tasks.Task<int> EliminarPermisosUsuarioAsync(int idusuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AsignarPermisoUsuario", ReplyAction="http://tempuri.org/IService1/AsignarPermisoUsuarioResponse")]
        int AsignarPermisoUsuario(int idusuario, int idpermiso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AsignarPermisoUsuario", ReplyAction="http://tempuri.org/IService1/AsignarPermisoUsuarioResponse")]
        System.Threading.Tasks.Task<int> AsignarPermisoUsuarioAsync(int idusuario, int idpermiso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuariosTodos", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuariosTodosResponse")]
        ControlAccesoES.ControlAsistencia.ObjUsuario[] SeleccionarUsuariosTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUsuariosTodos", ReplyAction="http://tempuri.org/IService1/SeleccionarUsuariosTodosResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario[]> SeleccionarUsuariosTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoXID", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoXIDResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoXID(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoXID", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoXIDResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoXIDAsync(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoXNumeroEmp", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoXNumeroEmpResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoXNumeroEmp(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoXNumeroEmp", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoXNumeroEmpResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoXNumeroEmpAsync(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEmpleadosRamoUnidad", ReplyAction="http://tempuri.org/IService1/SelecionarEmpleadosRamoUnidadResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado[] SelecionarEmpleadosRamoUnidad(string cvramo, string cvunidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEmpleadosRamoUnidad", ReplyAction="http://tempuri.org/IService1/SelecionarEmpleadosRamoUnidadResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SelecionarEmpleadosRamoUnidadAsync(string cvramo, string cvunidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEmpleadosRH", ReplyAction="http://tempuri.org/IService1/SelecionarEmpleadosRHResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado[] SelecionarEmpleadosRH();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEmpleadosRH", ReplyAction="http://tempuri.org/IService1/SelecionarEmpleadosRHResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SelecionarEmpleadosRHAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarPermisosDisponibles", ReplyAction="http://tempuri.org/IService1/SeleccionarPermisosDisponiblesResponse")]
        ControlAccesoES.ControlAsistencia.ObjPermiso[] SeleccionarPermisosDisponibles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarPermisosDisponibles", ReplyAction="http://tempuri.org/IService1/SeleccionarPermisosDisponiblesResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjPermiso[]> SeleccionarPermisosDisponiblesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarEmpleado", ReplyAction="http://tempuri.org/IService1/ModificarEmpleadoResponse")]
        int ModificarEmpleado(
                    string partida, 
                    string cvpuesto, 
                    string rfc, 
                    string nombreUnidad, 
                    string sexo, 
                    string edoCiv, 
                    string curp, 
                    string estatus, 
                    byte[] foto, 
                    byte[] huella1, 
                    byte[] huella2, 
                    string checaAsistencia, 
                    int idEmpleado, 
                    System.DateTime fechaIngreso, 
                    System.DateTime fechaPuesto, 
                    string tipoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarEmpleado", ReplyAction="http://tempuri.org/IService1/ModificarEmpleadoResponse")]
        System.Threading.Tasks.Task<int> ModificarEmpleadoAsync(
                    string partida, 
                    string cvpuesto, 
                    string rfc, 
                    string nombreUnidad, 
                    string sexo, 
                    string edoCiv, 
                    string curp, 
                    string estatus, 
                    byte[] foto, 
                    byte[] huella1, 
                    byte[] huella2, 
                    string checaAsistencia, 
                    int idEmpleado, 
                    System.DateTime fechaIngreso, 
                    System.DateTime fechaPuesto, 
                    string tipoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarEmpleado", ReplyAction="http://tempuri.org/IService1/InsertarEmpleadoResponse")]
        int InsertarEmpleado(int idEmpleado, string nempleado, string partida, string cvpuesto, string rfc, string nombre, string apellidoPaterno, string apellidoMaterno, string nombreUnidad, string sexo, System.DateTime fechaIngreso, System.DateTime fechaPuesto, string curp, string tipoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarEmpleado", ReplyAction="http://tempuri.org/IService1/InsertarEmpleadoResponse")]
        System.Threading.Tasks.Task<int> InsertarEmpleadoAsync(int idEmpleado, string nempleado, string partida, string cvpuesto, string rfc, string nombre, string apellidoPaterno, string apellidoMaterno, string nombreUnidad, string sexo, System.DateTime fechaIngreso, System.DateTime fechaPuesto, string curp, string tipoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarDatosEmpleadoNomina", ReplyAction="http://tempuri.org/IService1/SeleccionarDatosEmpleadoNominaResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarDatosEmpleadoNomina(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarDatosEmpleadoNomina", ReplyAction="http://tempuri.org/IService1/SeleccionarDatosEmpleadoNominaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarDatosEmpleadoNominaAsync(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTodosEmpleadosNomina", ReplyAction="http://tempuri.org/IService1/SeleccionarTodosEmpleadosNominaResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado[] SeleccionarTodosEmpleadosNomina();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTodosEmpleadosNomina", ReplyAction="http://tempuri.org/IService1/SeleccionarTodosEmpleadosNominaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SeleccionarTodosEmpleadosNominaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTodosEmpleadosChecador", ReplyAction="http://tempuri.org/IService1/SeleccionarTodosEmpleadosChecadorResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado[] SeleccionarTodosEmpleadosChecador(string[] numerosEmpleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTodosEmpleadosChecador", ReplyAction="http://tempuri.org/IService1/SeleccionarTodosEmpleadosChecadorResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SeleccionarTodosEmpleadosChecadorAsync(string[] numerosEmpleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarDatosEmpleadoRH", ReplyAction="http://tempuri.org/IService1/SeleccionarDatosEmpleadoRHResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarDatosEmpleadoRH(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarDatosEmpleadoRH", ReplyAction="http://tempuri.org/IService1/SeleccionarDatosEmpleadoRHResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarDatosEmpleadoRHAsync(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarFotografia", ReplyAction="http://tempuri.org/IService1/ActualizarFotografiaResponse")]
        int ActualizarFotografia(byte[] foto, int IdEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarFotografia", ReplyAction="http://tempuri.org/IService1/ActualizarFotografiaResponse")]
        System.Threading.Tasks.Task<int> ActualizarFotografiaAsync(byte[] foto, int IdEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorariosSeleccionarXIdEmpleado", ReplyAction="http://tempuri.org/IService1/HorariosSeleccionarXIdEmpleadoResponse")]
        ControlAccesoES.ControlAsistencia.ObjHorario[] HorariosSeleccionarXIdEmpleado(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorariosSeleccionarXIdEmpleado", ReplyAction="http://tempuri.org/IService1/HorariosSeleccionarXIdEmpleadoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> HorariosSeleccionarXIdEmpleadoAsync(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioEliminar", ReplyAction="http://tempuri.org/IService1/HorarioEliminarResponse")]
        int HorarioEliminar(int idEmpleado, int idTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioEliminar", ReplyAction="http://tempuri.org/IService1/HorarioEliminarResponse")]
        System.Threading.Tasks.Task<int> HorarioEliminarAsync(int idEmpleado, int idTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioInsertar", ReplyAction="http://tempuri.org/IService1/HorarioInsertarResponse")]
        int HorarioInsertar(
                    int idEmpleado, 
                    string nombreTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin, 
                    string tipoTurno, 
                    string estimulo, 
                    string descripcion, 
                    int turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioInsertar", ReplyAction="http://tempuri.org/IService1/HorarioInsertarResponse")]
        System.Threading.Tasks.Task<int> HorarioInsertarAsync(
                    int idEmpleado, 
                    string nombreTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin, 
                    string tipoTurno, 
                    string estimulo, 
                    string descripcion, 
                    int turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioModificar", ReplyAction="http://tempuri.org/IService1/HorarioModificarResponse")]
        int HorarioModificar(
                    int idEmpleado, 
                    int idTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HorarioModificar", ReplyAction="http://tempuri.org/IService1/HorarioModificarResponse")]
        System.Threading.Tasks.Task<int> HorarioModificarAsync(
                    int idEmpleado, 
                    int idTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadoresSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/ChecadoresSeleccionarTodosResponse")]
        ControlAccesoES.ControlAsistencia.ObjChecador[] ChecadoresSeleccionarTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadoresSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/ChecadoresSeleccionarTodosResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador[]> ChecadoresSeleccionarTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadoresSeleccionarPorEmpleadosAsiganados", ReplyAction="http://tempuri.org/IService1/ChecadoresSeleccionarPorEmpleadosAsiganadosResponse")]
        ControlAccesoES.ControlAsistencia.ObjChecador[] ChecadoresSeleccionarPorEmpleadosAsiganados(string cvramo, string cvunidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadoresSeleccionarPorEmpleadosAsiganados", ReplyAction="http://tempuri.org/IService1/ChecadoresSeleccionarPorEmpleadosAsiganadosResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador[]> ChecadoresSeleccionarPorEmpleadosAsiganadosAsync(string cvramo, string cvunidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorSeleccionar", ReplyAction="http://tempuri.org/IService1/ChecadorSeleccionarResponse")]
        ControlAccesoES.ControlAsistencia.ObjChecador ChecadorSeleccionar(int idChecador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorSeleccionar", ReplyAction="http://tempuri.org/IService1/ChecadorSeleccionarResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador> ChecadorSeleccionarAsync(int idChecador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorInsertar", ReplyAction="http://tempuri.org/IService1/ChecadorInsertarResponse")]
        int ChecadorInsertar(string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, bool AlmacenaRegLocal, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorInsertar", ReplyAction="http://tempuri.org/IService1/ChecadorInsertarResponse")]
        System.Threading.Tasks.Task<int> ChecadorInsertarAsync(string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, bool AlmacenaRegLocal, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorModificar", ReplyAction="http://tempuri.org/IService1/ChecadorModificarResponse")]
        int ChecadorModificar(int idChecador, string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, string[] listadoEmp, bool AlmacenaRegLocal, int horaRep, int minRep, int segRep, int lapso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorModificar", ReplyAction="http://tempuri.org/IService1/ChecadorModificarResponse")]
        System.Threading.Tasks.Task<int> ChecadorModificarAsync(int idChecador, string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, string[] listadoEmp, bool AlmacenaRegLocal, int horaRep, int minRep, int segRep, int lapso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorModificarIP", ReplyAction="http://tempuri.org/IService1/ChecadorModificarIPResponse")]
        int ChecadorModificarIP(int idChecador, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorModificarIP", ReplyAction="http://tempuri.org/IService1/ChecadorModificarIPResponse")]
        System.Threading.Tasks.Task<int> ChecadorModificarIPAsync(int idChecador, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorSeleccionarXMAC", ReplyAction="http://tempuri.org/IService1/ChecadorSeleccionarXMACResponse")]
        ControlAccesoES.ControlAsistencia.ObjChecador ChecadorSeleccionarXMAC(string mac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorSeleccionarXMAC", ReplyAction="http://tempuri.org/IService1/ChecadorSeleccionarXMACResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador> ChecadorSeleccionarXMACAsync(string mac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorEliminar", ReplyAction="http://tempuri.org/IService1/ChecadorEliminarResponse")]
        int ChecadorEliminar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorEliminar", ReplyAction="http://tempuri.org/IService1/ChecadorEliminarResponse")]
        System.Threading.Tasks.Task<int> ChecadorEliminarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorHoraServidor", ReplyAction="http://tempuri.org/IService1/ChecadorHoraServidorResponse")]
        System.DateTime ChecadorHoraServidor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorHoraServidor", ReplyAction="http://tempuri.org/IService1/ChecadorHoraServidorResponse")]
        System.Threading.Tasks.Task<System.DateTime> ChecadorHoraServidorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoSeleccionar", ReplyAction="http://tempuri.org/IService1/ControlAccesoSeleccionarResponse")]
        ControlAccesoES.ControlAsistencia.ObjControlAcceso ControlAccesoSeleccionar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoSeleccionar", ReplyAction="http://tempuri.org/IService1/ControlAccesoSeleccionarResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso> ControlAccesoSeleccionarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesosSeleccionarXEmp", ReplyAction="http://tempuri.org/IService1/ControlAccesosSeleccionarXEmpResponse")]
        ControlAccesoES.ControlAsistencia.ObjControlAcceso[] ControlAccesosSeleccionarXEmp(int idEmpleado, System.DateTime fechai, System.DateTime fechaf, bool porFecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesosSeleccionarXEmp", ReplyAction="http://tempuri.org/IService1/ControlAccesosSeleccionarXEmpResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso[]> ControlAccesosSeleccionarXEmpAsync(int idEmpleado, System.DateTime fechai, System.DateTime fechaf, bool porFecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertar", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarResponse")]
        int ControlAccesoInsertar(int id, System.DateTime fechaHora, string tipo, int turno, string justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertar", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoInsertarAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarRegistro", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarRegistroResponse")]
        int ControlAccesoInsertarRegistro(int id, System.DateTime fechaHora, string justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarRegistro", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarRegistroResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoInsertarRegistroAsync(int id, System.DateTime fechaHora, string justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarAdministrador", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarAdministradorResponse")]
        int ControlAccesoInsertarAdministrador(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarAdministrador", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarAdministradorResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoInsertarAdministradorAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesModificar", ReplyAction="http://tempuri.org/IService1/ControlAccesModificarResponse")]
        int ControlAccesModificar(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesModificar", ReplyAction="http://tempuri.org/IService1/ControlAccesModificarResponse")]
        System.Threading.Tasks.Task<int> ControlAccesModificarAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarExtras", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarExtrasResponse")]
        int ControlAccesoInsertarExtras(int id, System.DateTime fechaHora, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarExtras", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarExtrasResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoInsertarExtrasAsync(int id, System.DateTime fechaHora, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoEliminar", ReplyAction="http://tempuri.org/IService1/ControlAccesoEliminarResponse")]
        int ControlAccesoEliminar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoEliminar", ReplyAction="http://tempuri.org/IService1/ControlAccesoEliminarResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoEliminarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UnidadesSeleccionarTodasXCvRamo", ReplyAction="http://tempuri.org/IService1/UnidadesSeleccionarTodasXCvRamoResponse")]
        ControlAccesoES.ControlAsistencia.ObjUnidad[] UnidadesSeleccionarTodasXCvRamo(string CvRamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UnidadesSeleccionarTodasXCvRamo", ReplyAction="http://tempuri.org/IService1/UnidadesSeleccionarTodasXCvRamoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUnidad[]> UnidadesSeleccionarTodasXCvRamoAsync(string CvRamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RamosSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/RamosSeleccionarTodosResponse")]
        ControlAccesoES.ControlAsistencia.ObjRamo[] RamosSeleccionarTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RamosSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/RamosSeleccionarTodosResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjRamo[]> RamosSeleccionarTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamo", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamo(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamo", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoAsync(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmp", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmp(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmp", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpAsync(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidad", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidad(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidad", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoExtrasResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoExtras(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoExtrasResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmpExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpExtrasResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmpExtras(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmpExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpExtrasResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidadExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadExtrasResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidadExtras(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidadExtras", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadExtrasResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoPaseSalidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoPaseSalida(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoPaseSalidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string ramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmpPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpPaseSalidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmpPaseSalida(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXNumeroEmpPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXNumeroEmpPaseSalidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string nemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidadPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadPaseSalidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidadPaseSalida(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReporteESXRamoUnidadPaseSalida", ReplyAction="http://tempuri.org/IService1/ReporteESXRamoUnidadPaseSalidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DiasInhabiles", ReplyAction="http://tempuri.org/IService1/DiasInhabilesResponse")]
        ControlAccesoES.ControlAsistencia.ObjDiasInhabiles[] DiasInhabiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DiasInhabiles", ReplyAction="http://tempuri.org/IService1/DiasInhabilesResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjDiasInhabiles[]> DiasInhabilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarDiasInhabiles", ReplyAction="http://tempuri.org/IService1/InsertarDiasInhabilesResponse")]
        int InsertarDiasInhabiles(System.DateTime dia, string concepto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarDiasInhabiles", ReplyAction="http://tempuri.org/IService1/InsertarDiasInhabilesResponse")]
        System.Threading.Tasks.Task<int> InsertarDiasInhabilesAsync(System.DateTime dia, string concepto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarDiasInhabiles", ReplyAction="http://tempuri.org/IService1/EliminarDiasInhabilesResponse")]
        int EliminarDiasInhabiles(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarDiasInhabiles", ReplyAction="http://tempuri.org/IService1/EliminarDiasInhabilesResponse")]
        System.Threading.Tasks.Task<int> EliminarDiasInhabilesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorReplicaInsertar", ReplyAction="http://tempuri.org/IService1/ChecadorReplicaInsertarResponse")]
        int ChecadorReplicaInsertar(int idchec, System.DateTime fechaIni, System.DateTime fechaFin, int numeroReg, string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorReplicaInsertar", ReplyAction="http://tempuri.org/IService1/ChecadorReplicaInsertarResponse")]
        System.Threading.Tasks.Task<int> ChecadorReplicaInsertarAsync(int idchec, System.DateTime fechaIni, System.DateTime fechaFin, int numeroReg, string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorReplicaSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/ChecadorReplicaSeleccionarTodosResponse")]
        ControlAccesoES.ControlAsistencia.ObjChecadorReplica[] ChecadorReplicaSeleccionarTodos(int idC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChecadorReplicaSeleccionarTodos", ReplyAction="http://tempuri.org/IService1/ChecadorReplicaSeleccionarTodosResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecadorReplica[]> ChecadorReplicaSeleccionarTodosAsync(int idC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarPaseSalida", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarPaseSalidaResponse")]
        int ControlAccesoInsertarPaseSalida(int id, System.DateTime fechaHora, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesoInsertarPaseSalida", ReplyAction="http://tempuri.org/IService1/ControlAccesoInsertarPaseSalidaResponse")]
        System.Threading.Tasks.Task<int> ControlAccesoInsertarPaseSalidaAsync(int id, System.DateTime fechaHora, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarFaltasEmpleado", ReplyAction="http://tempuri.org/IService1/EvaluarFaltasEmpleadoResponse")]
        ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarFaltasEmpleado(string nemp, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarFaltasEmpleado", ReplyAction="http://tempuri.org/IService1/EvaluarFaltasEmpleadoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarFaltasEmpleadoAsync(string nemp, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarDiasEmpleado", ReplyAction="http://tempuri.org/IService1/EvaluarDiasEmpleadoResponse")]
        ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarDiasEmpleado(string nemp, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarDiasEmpleado", ReplyAction="http://tempuri.org/IService1/EvaluarDiasEmpleadoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarDiasEmpleadoAsync(string nemp, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoDatosBasicosXNumeroEmp", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoDatosBasicosXNumeroEmpResponse")]
        ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoDatosBasicosXNumeroEmp(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarEmpleadoDatosBasicosXNumeroEmp", ReplyAction="http://tempuri.org/IService1/SeleccionarEmpleadoDatosBasicosXNumeroEmpResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoDatosBasicosXNumeroEmpAsync(string numeroEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUltimoTurno", ReplyAction="http://tempuri.org/IService1/SeleccionarUltimoTurnoResponse")]
        ControlAccesoES.ControlAsistencia.ObjHorario SeleccionarUltimoTurno(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarUltimoTurno", ReplyAction="http://tempuri.org/IService1/SeleccionarUltimoTurnoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario> SeleccionarUltimoTurnoAsync(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTurnoXFecha", ReplyAction="http://tempuri.org/IService1/SeleccionarTurnoXFechaResponse")]
        ControlAccesoES.ControlAsistencia.ObjHorario[] SeleccionarTurnoXFecha(int idEmpleado, System.DateTime fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTurnoXFecha", ReplyAction="http://tempuri.org/IService1/SeleccionarTurnoXFechaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> SeleccionarTurnoXFechaAsync(int idEmpleado, System.DateTime fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTurnoXTipo", ReplyAction="http://tempuri.org/IService1/SeleccionarTurnoXTipoResponse")]
        ControlAccesoES.ControlAsistencia.ObjHorario[] SeleccionarTurnoXTipo(int idEmpleado, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeleccionarTurnoXTipo", ReplyAction="http://tempuri.org/IService1/SeleccionarTurnoXTipoResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> SeleccionarTurnoXTipoAsync(int idEmpleado, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesosSeleccionarXIdEmp", ReplyAction="http://tempuri.org/IService1/ControlAccesosSeleccionarXIdEmpResponse")]
        ControlAccesoES.ControlAsistencia.ObjControlAcceso[] ControlAccesosSeleccionarXIdEmp(int idEmpleado, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ControlAccesosSeleccionarXIdEmp", ReplyAction="http://tempuri.org/IService1/ControlAccesosSeleccionarXIdEmpResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso[]> ControlAccesosSeleccionarXIdEmpAsync(int idEmpleado, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JustificarControlAcceso", ReplyAction="http://tempuri.org/IService1/JustificarControlAccesoResponse")]
        int JustificarControlAcceso(int idEmpleado, System.DateTime fecha, string EoS, bool justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JustificarControlAcceso", ReplyAction="http://tempuri.org/IService1/JustificarControlAccesoResponse")]
        System.Threading.Tasks.Task<int> JustificarControlAccesoAsync(int idEmpleado, System.DateTime fecha, string EoS, bool justificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarFaltasXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarFaltasXPartidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarFaltasXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarFaltasXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarFaltasXPartidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarFaltasXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarRetardosXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarRetardosXPartidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarRetardosXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarRetardosXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarRetardosXPartidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarRetardosXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarPuntualidadXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarPuntualidadXPartidaResponse")]
        ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarPuntualidadXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EvaluarPuntualidadXPartida", ReplyAction="http://tempuri.org/IService1/EvaluarPuntualidadXPartidaResponse")]
        System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarPuntualidadXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestWs", ReplyAction="http://tempuri.org/IService1/TestWsResponse")]
        string TestWs(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestWs", ReplyAction="http://tempuri.org/IService1/TestWsResponse")]
        System.Threading.Tasks.Task<string> TestWsAsync(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ControlAccesoES.ControlAsistencia.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ControlAccesoES.ControlAsistencia.IService1>, ControlAccesoES.ControlAsistencia.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(string value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(string value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ControlAccesoES.ControlAsistencia.CompositeType GetDataUsingDataContract(ControlAccesoES.ControlAsistencia.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.CompositeType> GetDataUsingDataContractAsync(ControlAccesoES.ControlAsistencia.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjUsuario SeleccionarUsuarioXUsername(string username, string password) {
            return base.Channel.SeleccionarUsuarioXUsername(username, password);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario> SeleccionarUsuarioXUsernameAsync(string username, string password) {
            return base.Channel.SeleccionarUsuarioXUsernameAsync(username, password);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjUsuario SeleccionarUsuarioXID(int idusuario) {
            return base.Channel.SeleccionarUsuarioXID(idusuario);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario> SeleccionarUsuarioXIDAsync(int idusuario) {
            return base.Channel.SeleccionarUsuarioXIDAsync(idusuario);
        }
        
        public int EliminarPermisosUsuario(int idusuario) {
            return base.Channel.EliminarPermisosUsuario(idusuario);
        }
        
        public System.Threading.Tasks.Task<int> EliminarPermisosUsuarioAsync(int idusuario) {
            return base.Channel.EliminarPermisosUsuarioAsync(idusuario);
        }
        
        public int AsignarPermisoUsuario(int idusuario, int idpermiso) {
            return base.Channel.AsignarPermisoUsuario(idusuario, idpermiso);
        }
        
        public System.Threading.Tasks.Task<int> AsignarPermisoUsuarioAsync(int idusuario, int idpermiso) {
            return base.Channel.AsignarPermisoUsuarioAsync(idusuario, idpermiso);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjUsuario[] SeleccionarUsuariosTodos() {
            return base.Channel.SeleccionarUsuariosTodos();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUsuario[]> SeleccionarUsuariosTodosAsync() {
            return base.Channel.SeleccionarUsuariosTodosAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoXID(int idEmpleado) {
            return base.Channel.SeleccionarEmpleadoXID(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoXIDAsync(int idEmpleado) {
            return base.Channel.SeleccionarEmpleadoXIDAsync(idEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoXNumeroEmp(string numeroEmpleado) {
            return base.Channel.SeleccionarEmpleadoXNumeroEmp(numeroEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoXNumeroEmpAsync(string numeroEmpleado) {
            return base.Channel.SeleccionarEmpleadoXNumeroEmpAsync(numeroEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado[] SelecionarEmpleadosRamoUnidad(string cvramo, string cvunidad) {
            return base.Channel.SelecionarEmpleadosRamoUnidad(cvramo, cvunidad);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SelecionarEmpleadosRamoUnidadAsync(string cvramo, string cvunidad) {
            return base.Channel.SelecionarEmpleadosRamoUnidadAsync(cvramo, cvunidad);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado[] SelecionarEmpleadosRH() {
            return base.Channel.SelecionarEmpleadosRH();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SelecionarEmpleadosRHAsync() {
            return base.Channel.SelecionarEmpleadosRHAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjPermiso[] SeleccionarPermisosDisponibles() {
            return base.Channel.SeleccionarPermisosDisponibles();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjPermiso[]> SeleccionarPermisosDisponiblesAsync() {
            return base.Channel.SeleccionarPermisosDisponiblesAsync();
        }
        
        public int ModificarEmpleado(
                    string partida, 
                    string cvpuesto, 
                    string rfc, 
                    string nombreUnidad, 
                    string sexo, 
                    string edoCiv, 
                    string curp, 
                    string estatus, 
                    byte[] foto, 
                    byte[] huella1, 
                    byte[] huella2, 
                    string checaAsistencia, 
                    int idEmpleado, 
                    System.DateTime fechaIngreso, 
                    System.DateTime fechaPuesto, 
                    string tipoEmp) {
            return base.Channel.ModificarEmpleado(partida, cvpuesto, rfc, nombreUnidad, sexo, edoCiv, curp, estatus, foto, huella1, huella2, checaAsistencia, idEmpleado, fechaIngreso, fechaPuesto, tipoEmp);
        }
        
        public System.Threading.Tasks.Task<int> ModificarEmpleadoAsync(
                    string partida, 
                    string cvpuesto, 
                    string rfc, 
                    string nombreUnidad, 
                    string sexo, 
                    string edoCiv, 
                    string curp, 
                    string estatus, 
                    byte[] foto, 
                    byte[] huella1, 
                    byte[] huella2, 
                    string checaAsistencia, 
                    int idEmpleado, 
                    System.DateTime fechaIngreso, 
                    System.DateTime fechaPuesto, 
                    string tipoEmp) {
            return base.Channel.ModificarEmpleadoAsync(partida, cvpuesto, rfc, nombreUnidad, sexo, edoCiv, curp, estatus, foto, huella1, huella2, checaAsistencia, idEmpleado, fechaIngreso, fechaPuesto, tipoEmp);
        }
        
        public int InsertarEmpleado(int idEmpleado, string nempleado, string partida, string cvpuesto, string rfc, string nombre, string apellidoPaterno, string apellidoMaterno, string nombreUnidad, string sexo, System.DateTime fechaIngreso, System.DateTime fechaPuesto, string curp, string tipoEmp) {
            return base.Channel.InsertarEmpleado(idEmpleado, nempleado, partida, cvpuesto, rfc, nombre, apellidoPaterno, apellidoMaterno, nombreUnidad, sexo, fechaIngreso, fechaPuesto, curp, tipoEmp);
        }
        
        public System.Threading.Tasks.Task<int> InsertarEmpleadoAsync(int idEmpleado, string nempleado, string partida, string cvpuesto, string rfc, string nombre, string apellidoPaterno, string apellidoMaterno, string nombreUnidad, string sexo, System.DateTime fechaIngreso, System.DateTime fechaPuesto, string curp, string tipoEmp) {
            return base.Channel.InsertarEmpleadoAsync(idEmpleado, nempleado, partida, cvpuesto, rfc, nombre, apellidoPaterno, apellidoMaterno, nombreUnidad, sexo, fechaIngreso, fechaPuesto, curp, tipoEmp);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarDatosEmpleadoNomina(string numeroEmpleado) {
            return base.Channel.SeleccionarDatosEmpleadoNomina(numeroEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarDatosEmpleadoNominaAsync(string numeroEmpleado) {
            return base.Channel.SeleccionarDatosEmpleadoNominaAsync(numeroEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado[] SeleccionarTodosEmpleadosNomina() {
            return base.Channel.SeleccionarTodosEmpleadosNomina();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SeleccionarTodosEmpleadosNominaAsync() {
            return base.Channel.SeleccionarTodosEmpleadosNominaAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado[] SeleccionarTodosEmpleadosChecador(string[] numerosEmpleados) {
            return base.Channel.SeleccionarTodosEmpleadosChecador(numerosEmpleados);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado[]> SeleccionarTodosEmpleadosChecadorAsync(string[] numerosEmpleados) {
            return base.Channel.SeleccionarTodosEmpleadosChecadorAsync(numerosEmpleados);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarDatosEmpleadoRH(string numeroEmpleado) {
            return base.Channel.SeleccionarDatosEmpleadoRH(numeroEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarDatosEmpleadoRHAsync(string numeroEmpleado) {
            return base.Channel.SeleccionarDatosEmpleadoRHAsync(numeroEmpleado);
        }
        
        public int ActualizarFotografia(byte[] foto, int IdEmpleado) {
            return base.Channel.ActualizarFotografia(foto, IdEmpleado);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarFotografiaAsync(byte[] foto, int IdEmpleado) {
            return base.Channel.ActualizarFotografiaAsync(foto, IdEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjHorario[] HorariosSeleccionarXIdEmpleado(int idEmpleado) {
            return base.Channel.HorariosSeleccionarXIdEmpleado(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> HorariosSeleccionarXIdEmpleadoAsync(int idEmpleado) {
            return base.Channel.HorariosSeleccionarXIdEmpleadoAsync(idEmpleado);
        }
        
        public int HorarioEliminar(int idEmpleado, int idTurno) {
            return base.Channel.HorarioEliminar(idEmpleado, idTurno);
        }
        
        public System.Threading.Tasks.Task<int> HorarioEliminarAsync(int idEmpleado, int idTurno) {
            return base.Channel.HorarioEliminarAsync(idEmpleado, idTurno);
        }
        
        public int HorarioInsertar(
                    int idEmpleado, 
                    string nombreTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin, 
                    string tipoTurno, 
                    string estimulo, 
                    string descripcion, 
                    int turno) {
            return base.Channel.HorarioInsertar(idEmpleado, nombreTurno, lunesE, lunesS, martesE, martesS, miercolesE, miercolesS, juevesE, juevesS, viernesE, viernesS, sabadoE, sabadoS, domingoE, domingoS, periodoIni, periodoFin, tipoTurno, estimulo, descripcion, turno);
        }
        
        public System.Threading.Tasks.Task<int> HorarioInsertarAsync(
                    int idEmpleado, 
                    string nombreTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin, 
                    string tipoTurno, 
                    string estimulo, 
                    string descripcion, 
                    int turno) {
            return base.Channel.HorarioInsertarAsync(idEmpleado, nombreTurno, lunesE, lunesS, martesE, martesS, miercolesE, miercolesS, juevesE, juevesS, viernesE, viernesS, sabadoE, sabadoS, domingoE, domingoS, periodoIni, periodoFin, tipoTurno, estimulo, descripcion, turno);
        }
        
        public int HorarioModificar(
                    int idEmpleado, 
                    int idTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin) {
            return base.Channel.HorarioModificar(idEmpleado, idTurno, lunesE, lunesS, martesE, martesS, miercolesE, miercolesS, juevesE, juevesS, viernesE, viernesS, sabadoE, sabadoS, domingoE, domingoS, periodoIni, periodoFin);
        }
        
        public System.Threading.Tasks.Task<int> HorarioModificarAsync(
                    int idEmpleado, 
                    int idTurno, 
                    System.DateTime lunesE, 
                    System.DateTime lunesS, 
                    System.DateTime martesE, 
                    System.DateTime martesS, 
                    System.DateTime miercolesE, 
                    System.DateTime miercolesS, 
                    System.DateTime juevesE, 
                    System.DateTime juevesS, 
                    System.DateTime viernesE, 
                    System.DateTime viernesS, 
                    System.DateTime sabadoE, 
                    System.DateTime sabadoS, 
                    System.DateTime domingoE, 
                    System.DateTime domingoS, 
                    System.DateTime periodoIni, 
                    System.DateTime periodoFin) {
            return base.Channel.HorarioModificarAsync(idEmpleado, idTurno, lunesE, lunesS, martesE, martesS, miercolesE, miercolesS, juevesE, juevesS, viernesE, viernesS, sabadoE, sabadoS, domingoE, domingoS, periodoIni, periodoFin);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjChecador[] ChecadoresSeleccionarTodos() {
            return base.Channel.ChecadoresSeleccionarTodos();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador[]> ChecadoresSeleccionarTodosAsync() {
            return base.Channel.ChecadoresSeleccionarTodosAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjChecador[] ChecadoresSeleccionarPorEmpleadosAsiganados(string cvramo, string cvunidad) {
            return base.Channel.ChecadoresSeleccionarPorEmpleadosAsiganados(cvramo, cvunidad);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador[]> ChecadoresSeleccionarPorEmpleadosAsiganadosAsync(string cvramo, string cvunidad) {
            return base.Channel.ChecadoresSeleccionarPorEmpleadosAsiganadosAsync(cvramo, cvunidad);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjChecador ChecadorSeleccionar(int idChecador) {
            return base.Channel.ChecadorSeleccionar(idChecador);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador> ChecadorSeleccionarAsync(int idChecador) {
            return base.Channel.ChecadorSeleccionarAsync(idChecador);
        }
        
        public int ChecadorInsertar(string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, bool AlmacenaRegLocal, string ip) {
            return base.Channel.ChecadorInsertar(nombre, fechaAlta, mac, user, password, activo, empleadosCargados, AlmacenaRegLocal, ip);
        }
        
        public System.Threading.Tasks.Task<int> ChecadorInsertarAsync(string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, bool AlmacenaRegLocal, string ip) {
            return base.Channel.ChecadorInsertarAsync(nombre, fechaAlta, mac, user, password, activo, empleadosCargados, AlmacenaRegLocal, ip);
        }
        
        public int ChecadorModificar(int idChecador, string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, string[] listadoEmp, bool AlmacenaRegLocal, int horaRep, int minRep, int segRep, int lapso) {
            return base.Channel.ChecadorModificar(idChecador, nombre, fechaAlta, mac, user, password, activo, empleadosCargados, listadoEmp, AlmacenaRegLocal, horaRep, minRep, segRep, lapso);
        }
        
        public System.Threading.Tasks.Task<int> ChecadorModificarAsync(int idChecador, string nombre, System.DateTime fechaAlta, string mac, string user, string password, bool activo, bool empleadosCargados, string[] listadoEmp, bool AlmacenaRegLocal, int horaRep, int minRep, int segRep, int lapso) {
            return base.Channel.ChecadorModificarAsync(idChecador, nombre, fechaAlta, mac, user, password, activo, empleadosCargados, listadoEmp, AlmacenaRegLocal, horaRep, minRep, segRep, lapso);
        }
        
        public int ChecadorModificarIP(int idChecador, string ip) {
            return base.Channel.ChecadorModificarIP(idChecador, ip);
        }
        
        public System.Threading.Tasks.Task<int> ChecadorModificarIPAsync(int idChecador, string ip) {
            return base.Channel.ChecadorModificarIPAsync(idChecador, ip);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjChecador ChecadorSeleccionarXMAC(string mac) {
            return base.Channel.ChecadorSeleccionarXMAC(mac);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecador> ChecadorSeleccionarXMACAsync(string mac) {
            return base.Channel.ChecadorSeleccionarXMACAsync(mac);
        }
        
        public int ChecadorEliminar(int id) {
            return base.Channel.ChecadorEliminar(id);
        }
        
        public System.Threading.Tasks.Task<int> ChecadorEliminarAsync(int id) {
            return base.Channel.ChecadorEliminarAsync(id);
        }
        
        public System.DateTime ChecadorHoraServidor() {
            return base.Channel.ChecadorHoraServidor();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> ChecadorHoraServidorAsync() {
            return base.Channel.ChecadorHoraServidorAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjControlAcceso ControlAccesoSeleccionar(int id) {
            return base.Channel.ControlAccesoSeleccionar(id);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso> ControlAccesoSeleccionarAsync(int id) {
            return base.Channel.ControlAccesoSeleccionarAsync(id);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjControlAcceso[] ControlAccesosSeleccionarXEmp(int idEmpleado, System.DateTime fechai, System.DateTime fechaf, bool porFecha) {
            return base.Channel.ControlAccesosSeleccionarXEmp(idEmpleado, fechai, fechaf, porFecha);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso[]> ControlAccesosSeleccionarXEmpAsync(int idEmpleado, System.DateTime fechai, System.DateTime fechaf, bool porFecha) {
            return base.Channel.ControlAccesosSeleccionarXEmpAsync(idEmpleado, fechai, fechaf, porFecha);
        }
        
        public int ControlAccesoInsertar(int id, System.DateTime fechaHora, string tipo, int turno, string justificado) {
            return base.Channel.ControlAccesoInsertar(id, fechaHora, tipo, turno, justificado);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoInsertarAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado) {
            return base.Channel.ControlAccesoInsertarAsync(id, fechaHora, tipo, turno, justificado);
        }
        
        public int ControlAccesoInsertarRegistro(int id, System.DateTime fechaHora, string justificado) {
            return base.Channel.ControlAccesoInsertarRegistro(id, fechaHora, justificado);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoInsertarRegistroAsync(int id, System.DateTime fechaHora, string justificado) {
            return base.Channel.ControlAccesoInsertarRegistroAsync(id, fechaHora, justificado);
        }
        
        public int ControlAccesoInsertarAdministrador(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo) {
            return base.Channel.ControlAccesoInsertarAdministrador(id, fechaHora, tipo, turno, justificado, idusuario, motivo);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoInsertarAdministradorAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo) {
            return base.Channel.ControlAccesoInsertarAdministradorAsync(id, fechaHora, tipo, turno, justificado, idusuario, motivo);
        }
        
        public int ControlAccesModificar(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo) {
            return base.Channel.ControlAccesModificar(id, fechaHora, tipo, turno, justificado, idusuario, motivo);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesModificarAsync(int id, System.DateTime fechaHora, string tipo, int turno, string justificado, int idusuario, string motivo) {
            return base.Channel.ControlAccesModificarAsync(id, fechaHora, tipo, turno, justificado, idusuario, motivo);
        }
        
        public int ControlAccesoInsertarExtras(int id, System.DateTime fechaHora, string tipo) {
            return base.Channel.ControlAccesoInsertarExtras(id, fechaHora, tipo);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoInsertarExtrasAsync(int id, System.DateTime fechaHora, string tipo) {
            return base.Channel.ControlAccesoInsertarExtrasAsync(id, fechaHora, tipo);
        }
        
        public int ControlAccesoEliminar(int id) {
            return base.Channel.ControlAccesoEliminar(id);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoEliminarAsync(int id) {
            return base.Channel.ControlAccesoEliminarAsync(id);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjUnidad[] UnidadesSeleccionarTodasXCvRamo(string CvRamo) {
            return base.Channel.UnidadesSeleccionarTodasXCvRamo(CvRamo);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjUnidad[]> UnidadesSeleccionarTodasXCvRamoAsync(string CvRamo) {
            return base.Channel.UnidadesSeleccionarTodasXCvRamoAsync(CvRamo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjRamo[] RamosSeleccionarTodos() {
            return base.Channel.RamosSeleccionarTodos();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjRamo[]> RamosSeleccionarTodosAsync() {
            return base.Channel.RamosSeleccionarTodosAsync();
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamo(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamo(fechai, fechaf, ramo);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoAsync(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamoAsync(fechai, fechaf, ramo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmp(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmp(fechai, fechaf, nemp);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpAsync(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmpAsync(fechai, fechaf, nemp);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidad(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidad(fechai, fechaf, cvRamoUni);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidadAsync(fechai, fechaf, cvRamoUni);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoExtras(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamoExtras(fechai, fechaf, ramo);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamoExtrasAsync(fechai, fechaf, ramo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmpExtras(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmpExtras(fechai, fechaf, nemp);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmpExtrasAsync(fechai, fechaf, nemp);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidadExtras(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidadExtras(fechai, fechaf, cvRamoUni);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadExtrasAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidadExtrasAsync(fechai, fechaf, cvRamoUni);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoPaseSalida(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamoPaseSalida(fechai, fechaf, ramo);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string ramo) {
            return base.Channel.ReporteESXRamoPaseSalidaAsync(fechai, fechaf, ramo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXNumeroEmpPaseSalida(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmpPaseSalida(fechai, fechaf, nemp);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXNumeroEmpPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string nemp) {
            return base.Channel.ReporteESXNumeroEmpPaseSalidaAsync(fechai, fechaf, nemp);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjReporteES[] ReporteESXRamoUnidadPaseSalida(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidadPaseSalida(fechai, fechaf, cvRamoUni);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjReporteES[]> ReporteESXRamoUnidadPaseSalidaAsync(System.DateTime fechai, System.DateTime fechaf, string cvRamoUni) {
            return base.Channel.ReporteESXRamoUnidadPaseSalidaAsync(fechai, fechaf, cvRamoUni);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjDiasInhabiles[] DiasInhabiles() {
            return base.Channel.DiasInhabiles();
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjDiasInhabiles[]> DiasInhabilesAsync() {
            return base.Channel.DiasInhabilesAsync();
        }
        
        public int InsertarDiasInhabiles(System.DateTime dia, string concepto) {
            return base.Channel.InsertarDiasInhabiles(dia, concepto);
        }
        
        public System.Threading.Tasks.Task<int> InsertarDiasInhabilesAsync(System.DateTime dia, string concepto) {
            return base.Channel.InsertarDiasInhabilesAsync(dia, concepto);
        }
        
        public int EliminarDiasInhabiles(int id) {
            return base.Channel.EliminarDiasInhabiles(id);
        }
        
        public System.Threading.Tasks.Task<int> EliminarDiasInhabilesAsync(int id) {
            return base.Channel.EliminarDiasInhabilesAsync(id);
        }
        
        public int ChecadorReplicaInsertar(int idchec, System.DateTime fechaIni, System.DateTime fechaFin, int numeroReg, string IP) {
            return base.Channel.ChecadorReplicaInsertar(idchec, fechaIni, fechaFin, numeroReg, IP);
        }
        
        public System.Threading.Tasks.Task<int> ChecadorReplicaInsertarAsync(int idchec, System.DateTime fechaIni, System.DateTime fechaFin, int numeroReg, string IP) {
            return base.Channel.ChecadorReplicaInsertarAsync(idchec, fechaIni, fechaFin, numeroReg, IP);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjChecadorReplica[] ChecadorReplicaSeleccionarTodos(int idC) {
            return base.Channel.ChecadorReplicaSeleccionarTodos(idC);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjChecadorReplica[]> ChecadorReplicaSeleccionarTodosAsync(int idC) {
            return base.Channel.ChecadorReplicaSeleccionarTodosAsync(idC);
        }
        
        public int ControlAccesoInsertarPaseSalida(int id, System.DateTime fechaHora, string tipo) {
            return base.Channel.ControlAccesoInsertarPaseSalida(id, fechaHora, tipo);
        }
        
        public System.Threading.Tasks.Task<int> ControlAccesoInsertarPaseSalidaAsync(int id, System.DateTime fechaHora, string tipo) {
            return base.Channel.ControlAccesoInsertarPaseSalidaAsync(id, fechaHora, tipo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarFaltasEmpleado(string nemp, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarFaltasEmpleado(nemp, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarFaltasEmpleadoAsync(string nemp, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarFaltasEmpleadoAsync(nemp, fechai, fechaf);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarDiasEmpleado(string nemp, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarDiasEmpleado(nemp, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarDiasEmpleadoAsync(string nemp, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarDiasEmpleadoAsync(nemp, fechai, fechaf);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEmpleado SeleccionarEmpleadoDatosBasicosXNumeroEmp(string numeroEmpleado) {
            return base.Channel.SeleccionarEmpleadoDatosBasicosXNumeroEmp(numeroEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEmpleado> SeleccionarEmpleadoDatosBasicosXNumeroEmpAsync(string numeroEmpleado) {
            return base.Channel.SeleccionarEmpleadoDatosBasicosXNumeroEmpAsync(numeroEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjHorario SeleccionarUltimoTurno(int idEmpleado) {
            return base.Channel.SeleccionarUltimoTurno(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario> SeleccionarUltimoTurnoAsync(int idEmpleado) {
            return base.Channel.SeleccionarUltimoTurnoAsync(idEmpleado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjHorario[] SeleccionarTurnoXFecha(int idEmpleado, System.DateTime fecha) {
            return base.Channel.SeleccionarTurnoXFecha(idEmpleado, fecha);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> SeleccionarTurnoXFechaAsync(int idEmpleado, System.DateTime fecha) {
            return base.Channel.SeleccionarTurnoXFechaAsync(idEmpleado, fecha);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjHorario[] SeleccionarTurnoXTipo(int idEmpleado, string tipo) {
            return base.Channel.SeleccionarTurnoXTipo(idEmpleado, tipo);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjHorario[]> SeleccionarTurnoXTipoAsync(int idEmpleado, string tipo) {
            return base.Channel.SeleccionarTurnoXTipoAsync(idEmpleado, tipo);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjControlAcceso[] ControlAccesosSeleccionarXIdEmp(int idEmpleado, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.ControlAccesosSeleccionarXIdEmp(idEmpleado, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjControlAcceso[]> ControlAccesosSeleccionarXIdEmpAsync(int idEmpleado, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.ControlAccesosSeleccionarXIdEmpAsync(idEmpleado, fechai, fechaf);
        }
        
        public int JustificarControlAcceso(int idEmpleado, System.DateTime fecha, string EoS, bool justificado) {
            return base.Channel.JustificarControlAcceso(idEmpleado, fecha, EoS, justificado);
        }
        
        public System.Threading.Tasks.Task<int> JustificarControlAccesoAsync(int idEmpleado, System.DateTime fecha, string EoS, bool justificado) {
            return base.Channel.JustificarControlAccesoAsync(idEmpleado, fecha, EoS, justificado);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarFaltasXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarFaltasXPartida(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarFaltasXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarFaltasXPartidaAsync(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarRetardosXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarRetardosXPartida(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarRetardosXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarRetardosXPartidaAsync(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[] EvaluarPuntualidadXPartida(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarPuntualidadXPartida(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public System.Threading.Tasks.Task<ControlAccesoES.ControlAsistencia.ObjEvaluacionFalta[]> EvaluarPuntualidadXPartidaAsync(string cvRamo, string cvUnidad, System.DateTime fechai, System.DateTime fechaf) {
            return base.Channel.EvaluarPuntualidadXPartidaAsync(cvRamo, cvUnidad, fechai, fechaf);
        }
        
        public string TestWs(string mensaje) {
            return base.Channel.TestWs(mensaje);
        }
        
        public System.Threading.Tasks.Task<string> TestWsAsync(string mensaje) {
            return base.Channel.TestWsAsync(mensaje);
        }
    }
}
